package Components;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

public class Handler implements ActionListener, ItemListener {

	private ElementFenster meinFenster;

	public Handler(ElementFenster fenster) {
		this.meinFenster = fenster;
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// Mit Switch verzweigen (Achtung: case-sensitive)
		switch (e.getActionCommand()) {
		case "OK" -> onOK();
		case "CANCEL" -> onCancel();
		default -> throw new IllegalArgumentException("Unexpected value: " + e.getActionCommand());
		}
	}

	private void onOK() {
		System.out.println("OK Button ausgelöst");
	}

	private void onCancel() {
		System.out.println("Cancel Button ausgelöst");
	}

	// Methode aus ItemListener überschreiben.
	@Override
	public void itemStateChanged(ItemEvent e) {
		// Herausfinden, ob ein StateChange auf "Selected" stattgefunden hat.
		boolean isSelected = e.getStateChange() == ItemEvent.SELECTED;
		// Wenn es die Checkbox für Windows ist -> die Windows-Liste enablen
		if (e.getSource() == meinFenster.cbWindows) {
			meinFenster.lbWindowsVersionen.setEnabled(isSelected);
		}
		// Wenn es die Checkbox für Unix ist -> die Unix-Liste enablen
		if (e.getSource() == meinFenster.cbUnix) {
			meinFenster.lbUnixVersionen.setEnabled(isSelected);
		}
	}

}
